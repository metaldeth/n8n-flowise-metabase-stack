version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file: .env
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    env_file: .env
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - backend

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: always
    env_file: .env
    depends_on:
      - postgres
    networks:
      - backend

  flowise:
    image: flowiseai/flowise:latest
    container_name: flowise
    restart: always
    env_file: .env
    networks:
      - backend

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    restart: always
    env_file: .env
    depends_on:
      - postgres
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/www:/var/www/certbot
    depends_on:
      - n8n
      - flowise
      - metabase
      - pgadmin
    networks:
      - backend

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    restart: unless-stopped
    volumes:
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/www:/var/www/certbot
    entrypoint: >
      /bin/sh -c "trap exit TERM;
      while :; do
        certbot renew --webroot -w /var/www/certbot --quiet;
        sleep 12h & wait $${!};
      done"

networks:
  backend:
    driver: bridge